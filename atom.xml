<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>guo&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-01-15T13:01:25.909Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>YOLOv4配置记录</title>
    <link href="http://example.com/2023/01/23/YOLOv4%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2023/01/23/YOLOv4%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</id>
    <published>2023-01-22T16:00:00.000Z</published>
    <updated>2023-01-15T13:01:25.909Z</updated>
    
    <content type="html"><![CDATA[<p>个人YOLOv4配置记录</p><h1 id="YOLOv4配置记录"><a href="#YOLOv4配置记录" class="headerlink" title="YOLOv4配置记录"></a>YOLOv4配置记录</h1><p>本人采用的是一个在github上的<a href="https://github.com/bubbliiiing/yolov4-pytorch">基于pytorch的YOLOv4复现代码</a></p><p>作者在README.md文件中已经写好了如何使用这个模型，在此记录一下自己的使用。</p><hr><ol><li><p>复制代码：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bubbliiiing/yolov4-pytorch.git</span><br></pre></td></tr></tbody></table></figure></li><li><p>先试试能否正常训练数据集，首先下载VOC数据集：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://host.robots.ox.ac.uk/pascal/VOC/voc2012/VOCtrainval_11-May-2012.tar </span><br><span class="line">wget http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar </span><br><span class="line">wget http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtest_06-Nov-2007.tar</span><br></pre></td></tr></tbody></table></figure><p>数据集如下： <a href="http://host.robots.ox.ac.uk/pascal/VOC/voc2012/VOCtrainval_11-May-2012.tar">VOC 2012_trainval</a> 、<a href="http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar">VOC 2007_trainval</a>、<a href="http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtest_06-Nov-2007.tar">VOC2007_test</a></p></li><li><p>分别解压后以<strong>VOC2007_trainval</strong>为例，修改voc_annotation.py里面的annotation_mode=2。</p></li><li><p>修改voc_annotation.py里的VOCdevkit_path为VOC2007_trainval数据集的路径并加上/VOCdevkit。</p></li><li><p>运行voc_annotation.py将会在项目根目录生成两个txt文件(2007_train.txt和2007_val.txt)。</p></li><li><p>此时如果想从零开始训练模型，需要设置model_path = ‘’，pretrain = Fasle，Freeze_Train = Fasle，此时从0开始训练，且没有冻结主干的过程。但是作者认为网络从0开始训练的效果会很差，因为权值太过随机，特征提取效果不明显，所以作者非常不建议从0开始训练。（作者对从0开始训练有两个方案，具体train.py的注释中）。</p></li><li><p>根据建议去下载作者准备的<a href="https://pan.baidu.com/s/19Mw2u_df_nBzsC2lg20fQA">YOLOv4的预训练权重</a>(提取码：j5ge)，然后将下载的yolo4_weights.pth放入项目根目录的model_data中。</p></li><li><p>最后运行train.py即可正常训练。</p></li><li><p>而对于自己的数据训练请自行阅读作者的README.md文件。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;个人YOLOv4配置记录&lt;/p&gt;
&lt;h1 id=&quot;YOLOv4配置记录&quot;&gt;&lt;a href=&quot;#YOLOv4配置记录&quot; class=&quot;headerlink&quot; title=&quot;YOLOv4配置记录&quot;&gt;&lt;/a&gt;YOLOv4配置记录&lt;/h1&gt;&lt;p&gt;本人采用的是一个在github上的&lt;</summary>
      
    
    
    
    
  </entry>
  
</feed>
